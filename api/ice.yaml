swagger: '2.0'
info:
  title: Netflix/ICE Data API
  version: '3.0'
host: ec2-34-195-35-246.compute-1.amazonaws.com
basePath: /ice/dashboard
schemes:
  - https
securityDefinitions:
  ice_auth:
    type: basic
security:
  - ice_auth: []
consumes:
  - application/json
produces:
  - application/json
definitions:
  Name:
    type: object
    properties:
      name:
        type: string
  Names:
    type: array
    items:
      $ref: '#/definitions/Name'
  NamesResponse:
    type: object
    properties:
      status:
        type: number
      data:
        $ref: '#/definitions/Names'
parameters:
  showLentParam:
    name: showLent
    description: If true, return Lent operations and remove Borrowed. If false return Borrowed and remove Lent. Default is false.
    in: query
    type: boolean
    required: false

paths:
  /getAccounts:
    get:
      description: Get the list of accounts.
      operationId: getAccounts
      parameters:
        - name: all
          in: query
          description: If true, return all accounts, else only those that have cost and usage.
          type: boolean
          required: false
      responses:
        '200':
          description: getAccounts response
          schema:
            type: object
            properties:
              status:
                type: number
              data:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    awsName:
                      type: string
                    id:
                      type: string
                    email:
                      type: string
                    parents:
                      type: array
                      items:
                        type: string
                    status:
                      type: string
                    tags:
                      type: object                                                
  /getRegions:
    post:
      description: Get the list of regions used by the supplied accounts.
      operationId: getRegions
      parameters:
        - name: regionsRequest
          in: body
          required: true
          schema:
            type: object
            properties:
              account:
                description: Comma separated list of account names
                type: string
      responses:
        '200':
          description: collection of regions
          schema:
            $ref: '#/definitions/NamesResponse'

  /getZones:
    post:
      description: Get the list of zones used by all accounts.
      operationId: getZones
      parameters:
        - name: zonesRequest
          in: body
          required: true
          schema:
            type: object
            properties:
              account:
                description: Comma separated list of account names
                type: string
              region:
                description: Comma separated list of region names
                type: string
      responses:
        '200':
          description: collection of zones
          schema:
            $ref: '#/definitions/NamesResponse'
            
  /getProducts:
    post:
      description: Get the list of products used by the supplied accounts in the specified regions.
      operationId: getProducts
      parameters:
        - name: productsRequest
          in: body
          required: true
          schema:
            type: object
            properties:
              account:
                description: Comma separated list of account names
                type: string
              region:
                description: Comma separated list of region names
                type: string
              zone:
                description: Comma separated list of zone names
                type: string
              product:
                description: Comma separated list of product names
                type: string
              operation:
                description: Comma separated list of operation names
                type: string
              resources:
                description: If true, only return product names that can have tagged resources.
                type: boolean
              showZones:
                description: If true and zone is null or empty, return products for all zones.
                type: boolean
      responses:
        '200':
          description: collection of products
          schema:
            $ref: '#/definitions/NamesResponse'

  /userTagValues:
    post:
      description: Get the list of values for a given user tag.
      operationId: getUserTagValues
      parameters:
        - name: userTagValuesRequest
          in: body
          required: true
          schema:
            type: object
            properties:
              index:
                description: tag index in list returned by userTags
                type: number
              account:
                description: Comma separated list of account names
                type: string
              region:
                description: Comma separated list of region names
                type: string
              zone:
                description: Comma separated list of zone names
                type: string
              product:
                description: Comma separated list of product names
                type: string
            required: [index]
      responses:
        '200':
          description: collection of user tag values used for tagable resources
          schema:
            $ref: '#/definitions/NamesResponse'

  /getOperations:
    post:
      description: Get the list of operations for the supplied products used by the provided accounts in the specified regions.
      operationId: getOperations
      parameters:
        - name: operationsRequest
          in: body
          required: true
          schema:
            type: object
            properties:
              costType:
                description: Comma separated list of cost types. Values include Recurring, Amortization, Taxes, Credits, Savings
                type: string
              account:
                description: Comma separated list of account names
                type: string
              region:
                description: Comma separated list of region names
                type: string
              zone:
                description: Comma separated list of zone names
                type: string
              product:
                description: Comma separated list of product names
                type: string
              operations:
                description: Comma separated list of operation names
                type: string
              resources:
                description: If true, only return product names that can have tagged resources.
                type: boolean
              forReservation:
                type: boolean
              forSavingsPlans:
                type: boolean
              usage_cost:
                description: If "usage" remove Amortization and Savings operations.
                type: string
              showLent:
                description: If true, return Lent operations and remove Borrowed. If false return Borrowed and remove Lent.
                type: boolean
      responses:
        '200':
          description: collection of operations
          schema:
            $ref: '#/definitions/NamesResponse'

  /getUsageTypes:
    post:
      description: Get the list of usage types for the accounts, regions, products, and operations provided.
      operationId: getUsageTypes
      parameters:
        - name: usageTypesRequest
          in: body
          required: true
          schema:
            type: object
            properties:
              account:
                description: Comma separated list of account names
                type: string
              region:
                description: Comma separated list of region names
                type: string
              zone:
                description: Comma separated list of zone names
                type: string
              product:
                description: Comma separated list of product names
                type: string
              operation:
                description: Comma separated list of operation names
                type: string
              resources:
                description: If true, only return product names that can have tagged resources.
                type: boolean
      responses:
        '200':
          description: collection of usage types
          schema:
            $ref: '#/definitions/NamesResponse'

  /getReservationOps:
    get:
      description: Get the list of operations to use for requests in the reservations dashboard.
      parameters:
        - $ref: '#/parameters/showLentParam'          
      responses:
        '200':
          description: collection of operations
          schema:
            $ref: '#/definitions/NamesResponse'

  /getSavingsPlanOps:
    get:
      description: Get the list of operations to use for requests in the savings plans dashboard.
      parameters:
        - $ref: '#/parameters/showLentParam'
      responses:
        '200':
          description: collection of operations
          schema:
            $ref: '#/definitions/NamesResponse'

  /getUtilizationOps:
    get:
      description: Get the list of operations to use for requests in the utilization dashboard.
      responses:
        '200':
          description: collection of operations
          schema:
            $ref: '#/definitions/NamesResponse'

  /tags:
    get:
      description: Get the list of user tag keys
      responses:
        '200':
          description: collection of user tag keys
          schema:
            $ref: '#/definitions/NamesResponse'

  /getData:
    post:
      description: Get the data for the requested cost or usage.
      operationId: getData
      parameters:
        - name: dataRequest
          in: body
          description: data request parameters
          required: true
          schema:
            description: user tag values params use the name "tag-[name]", e.g. "tag-Product"
            type: object
            properties: 
              isCost:
                type: boolean
                description: Cost = true, Usage = false (default = true)
              usageUnit:
                type: string
                description: default = Instances
                enum: [Instances, ECUs, vCPUs, Normalized]
              aggregate:
                type: string
                description: default = none
                enum: [none, stats, data, both]
              groupBy:
                description: Dimension to use for aggregation buckets (default = none)
                type: string
                enum: [None, OrgUnit, Account, Region, Zone, Product, Operation, UsageType, Tag]
              consolidate:
                type: string
                description: default = hourly
                enum: [monthly, weekly, daily, hourly]
              start:
                type: string
              end:
                type: string
              breakdown:
                description: Produce data for breakdown by resource (default = false)
                type: boolean
              showsps:
                type: boolean
                description: default = false
              factorsps:
                type: boolean
                description: default = false
              consolidateGroups:
                description: Consolidate EC2/RDS/Redshift instance usage types of the same family into a single type or operation types into Savings, RIs, Amortized RIs, and Unused RIs
                type: boolean
              forReservation:
                type: boolean
                description: Requesting data for the Reservation dashboard. Includes Savings and Lent Operations. (default = false)
              forSavingsPlans:
                type: boolean
                description: Requesting data for the Savings Plans dashboard. Includes Lent Operations. (default = false)
              elasticity:
                type: boolean
              showZones:
                type: boolean
              spans:
                type: integer
              tagCoverage:
                description: If true, return data on tag coverage for resources
                type: boolean
              tag:
                description: Comma separated list of tags for tag coverage data
                type: string
              costType:
                description: Comma separated list of costType names for filtering data. Values include Recurring, Amortization, Tax, Credit, Savings, Subscription, SubscriptionTax, Refund, RefundTax
              account:
                description: Comma separated list of account names for filtering data
                type: string
              region:
                description: Comma separated list of region names for filtering data
                type: string
              zone:
                description: Comma separated list of zone names for filtering data
                type: string
              product:
                description: Comma separated list of product names for filtering data
                type: string
              operation:
                description: Comma separated list of operation names for filtering data
                type: string
              usageType:
                description: Comma separated list of usageType names for filtering data
                type: string
              groupByTag:
                description: When groupBy is set to Tag, indicates which user tag to use for aggregation buckets
                type: string
              showResourceGroupTags:
                description: Deprecated version of showUserTags
                type: boolean
              showUserTags:
                description: Enable filtering and/or group by user tags.
                type: boolean
              showLent:
                description: If true, return Lent operations and remove Borrowed. If false return Borrowed and remove Lent.
                type: boolean
            additionalProperties:
                description: Comma separated list of values for the specified user tag. Parameter name takes the form tag-<name>
                type: string
            required: [start, end]
      responses:
        '200':
          description: data collection
          schema:
            type: object
            properties:
              status:
                type: number
              start:
                type: number
              data:
                type: object
              stats:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    min:
                      type: number
                    max:
                      type: number
                    total:
                      type: number
                    average:
                      type: number
              groupBy:
                type: string
              interval:
                type: integer
  /getTimeSpan:
    get:
      description: Get the start and end times for the requested number of spans.
      parameters:
        - name: spans
          in: query
          description: number of spans
          type: integer
          required: true
        - name: end
          in: query
          description: end time
          type: string
          required: true
        - name: consolidate
          in: query
          description: consolidation period
          type: string
          enum:
            - daily
            - hourly
            - weekly
            - monthly
          required: true
      responses:
        '200':
          description: time span response
          schema:
            type: object
            properties:
              status:
                type: integer
              start:
                type: string
              end:
                type: string

  /instance:
    get:
      description: Get information about an AWS resource instance (e.g. EC2, RDS, etc...).
      parameters:
        - name: id
          in: query
          description: AWS ID of the instance
          type: string
          required: true
      responses:
        '200':
          description: instance information
          schema:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
              accountId:
                type: string
              accountName:
                type: string
              region:
                type: string
              zone:
                type: string
              tags:
                type: object
                additionalProperties:
                  type: string
        '404':
          description: not found error
  /getTagConfigs:
    get:
      description: Get the tag configuration settings used by the ICE processor
      responses:
        '200':
          description: tag configurations

  /getProcessorStatus:
    get:
      description: Get the monthly report processing data from the processor. Includes process times, report paths and report last modified times and whether the report is marked for reporocessing.
      responses:
        '200':
          description: processor status for all months processed.
          schema:
            type: array
            items:
              type: object
              properties:
                month:
                  type: string
      
  /getProcessorState:
    get:
      description: Get the current state of the processor.
      responses:
        '200':
          description: processor state.
          schema:
            type: string
            enum: [unknown, pending, running, shutting-down, terminated, stopping, stopped]
      
  /reprocess:
    post:
      description: Update a monthly report for reprocess flag
      operationId: reprocess
      parameters:
        - name: reprocessRequest
          in: body
          required: true
          schema:
            type: object
            properties:
              month:
                description: Month to update, e.g. 2020-02
                type: string
              state:
                description: Set state of reprocess flag to supplied value. Default is true.
                type: boolean
            required: [month]
      responses:
        '200':
          description: reprocess state updated successfully
        '400':
          description: invalid request
  
  /startProcessor:
    post:
      description: Start the ICE processor
      operationId: startProcessor
      responses:
        '200':
          description: processor start message sent
  /getSubscriptions:
    get:
      description: Get list of subscriptions in effect during requested month
      operationId: getSubscriptions
      parameters:
        - name: type
          in: query
          description: Type of subscription. Values are RI or SP
          type: string
          enum: [RI, SP]
          required: true
        - name: month
          in: query
          description: Year and month in ISO format. e.g. 2020-04
          type: string
          required: true
      responses:
        '200':
          description: List of Subscriptions
          schema:
            type: array
            items:
              type: array
              items:
                type: string
  /getMonths:
    get:
      description: Get list of months for which there is data
      operationId: getMonths
      responses:
        '200':
          description: List of month strings in ISO format.
          schema:
            type: array
            items:
              type: string
  /getPostProcessorStats:
    get:
      description: Get list of statistics for the post processor rules for the given month
      operationId: /getPostProcessorStats
      parameters:
        - name: month
          in: query
          description: Year and month in ISO format. e.g. 2020-04
          type: string
          required: true
      responses:
        '200':
          description: List of statistics
          schema:
            type: array
            items:
              type: array
              items:
                type: string
        