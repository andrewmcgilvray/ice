/*
 *
 *  Copyright 2013 Netflix, Inc.
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 *
 */
package com.netflix.ice.processor.postproc;

import java.util.List;

import com.netflix.ice.common.Config;
import com.netflix.ice.processor.config.S3BucketConfig;
import com.netflix.ice.processor.postproc.RuleConfig.Aggregation;

/**
 * Post Processor Report Configuration
 * 
 * Specifies where to save reports generated by the post processor and the aggregation levels desired.
 * Aggregation levels can include one or more of the values: monthly, daily, hourly
 * 
 * If includeCostType is set to true, then an additional costType column is added to the report.
 *
 * If workBucket is specified, the report data will be written to a work bucket for a reader
 * instance to use the data.
 */
public class ReportConfig {
	public enum DataType {
		cost,
		usage;
	}
	
	private S3BucketConfig s3Bucket;
	private List<Aggregation> aggregate;
	private List<DataType> types;
	private boolean archiveToWorkBucket;

	public S3BucketConfig getS3Bucket() {
		return s3Bucket;
	}
	public void setS3Bucket(S3BucketConfig s3Bucket) {
		this.s3Bucket = s3Bucket;
	}
	public List<Aggregation> getAggregate() {
		return aggregate;
	}
	public void setAggregate(List<Aggregation> aggregate) {
		this.aggregate = aggregate;
	}
	public List<DataType> getTypes() {
		return types;
	}
	public void setTypes(List<DataType> types) {
		this.types = types;
	}

	public boolean isArchiveToWorkBucket() {
		return archiveToWorkBucket;
	}

	public void setWorkBucket(boolean archiveToWorkBucket) {
		this.archiveToWorkBucket = archiveToWorkBucket;
	}
}
